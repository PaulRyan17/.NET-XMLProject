using System;
using System.Text;
using System.Xml;
using DingTechnicalTest.Models;
using DingTechnicalTest.Utils;

namespace DingTechnicalTest.API
{
	public class APIService
	{
		//creating the service as a singleton
		private static APIService apiService = new APIService();

		private APIService()
		{

		}
        
		//need to build an XML request and convert it to a byte array for sending
		//the method should take in XML as an argument and then convert and then send
		public void SendRequest(XmlDocument request) {
			//convert request to a byte array
			//Console.WriteLine(request);
			Console.WriteLine("Sending Request As Byte Array.....");
			byte[] bytes = ConvertByteArrayFromXml(request);

			//MESSAGE WOULD BE SENT HERE

			//THEN A RESPONSE WOULD BE SENT
			Console.WriteLine("Response being sent..");
			TriggerResponse();
		}

		public byte[] ConvertByteArrayFromXml(XmlDocument request) {
			return Encoding.Default.GetBytes(request.OuterXml);
		}
		//this is the method that is responsible for handling the response of the API
		public Response ReceiveResponse(byte[] response) {
			Console.WriteLine("Response Received");
			return SerializableHelper.ByteArrayToResponse(response);
		}

		//helper method to act like a reponse was sent
		public void TriggerResponse() {
			byte []  response2 = {69,90,69,45,88,77,76,45,77,115,103,48,50,60,77,101,115,115,97,103,101,62,13,10,32,32,60,72,101,97,100,101,114,62,13,10,32,32,32,32,60,77,101,115,115,97,103,101,68,97,116,101,62,50,48,49,48,48,51,50,52,60,47,77,101,115,115,97,103,101,68,97,116,101,62,13,10,32,32,32,32,60,77,101,115,115,97,103,101,84,105,109,101,62,49,57,50,56,48,54,60,47,77,101,115,115,97,103,101,84,105,109,101,62,13,10,32,32,60,47,72,101,97,100,101,114,62,13,10,32,32,60,66,111,100,121,62,13,10,32,32,32,32,60,84,114,97,110,115,97,99,116,105,111,110,73,68,62,51,51,50,53,50,55,60,47,84,114,97,110,115,97,99,116,105,111,110,73,68,62,13,10,32,32,32,32,60,84,114,97,110,115,97,99,116,105,111,110,78,117,109,98,101,114,62,49,50,49,48,52,55,48,60,47,84,114,97,110,115,97,99,116,105,111,110,78,117,109,98,101,114,62,13,10,32,32,32,32,60,80,104,111,110,101,78,117,109,98,101,114,62,54,51,57,57,57,57,57,57,57,57,57,57,60,47,80,104,111,110,101,78,117,109,98,101,114,62,13,10,32,32,32,32,60,65,109,111,117,110,116,62,48,48,48,48,48,48,50,53,48,48,60,47,65,109,111,117,110,116,62,13,10,32,32,32,32,60,82,101,115,117,108,116,62,48,51,60,47,82,101,115,117,108,116,62,13,10,32,32,60,47,66,111,100,121,62,13,10,60,47,77,101,115,115,97,103,101,62 };
			byte [] response1 = { 69, 90, 69, 45, 88, 77, 76, 45, 77, 115, 103, 48, 50, 60, 77, 101, 115, 115, 97, 103, 101, 62, 13, 10, 32, 32, 60, 72, 101, 97, 100, 101, 114, 62, 13, 10, 32, 32, 32, 32, 60, 77, 101, 115, 115, 97, 103, 101, 68, 97, 116, 101, 62, 50, 48, 49, 48, 48, 51, 50, 52, 60, 47, 77, 101, 115, 115, 97, 103, 101, 68, 97, 116, 101, 62, 13, 10, 32, 32, 32, 32, 60, 77, 101, 115, 115, 97, 103, 101, 84, 105, 109, 101, 62, 49, 57, 50, 54, 48, 50, 60, 47, 77, 101, 115, 115, 97, 103, 101, 84, 105, 109, 101, 62, 13, 10, 32, 32, 60, 47, 72, 101, 97, 100, 101, 114, 62, 13, 10, 32, 32, 60, 66, 111, 100, 121, 62, 13, 10, 32, 32, 32, 32, 60, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 68, 62, 51, 51, 50, 53, 50, 54, 60, 47, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 68, 62, 13, 10, 32, 32, 32, 32, 60, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 78, 117, 109, 98, 101, 114, 62, 49, 50, 49, 48, 52, 53, 50, 60, 47, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 78, 117, 109, 98, 101, 114, 62, 13, 10, 32, 32, 32, 32, 60, 80, 104, 111, 110, 101, 78, 117, 109, 98, 101, 114, 62, 54, 51, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 60, 47, 80, 104, 111, 110, 101, 78, 117, 109, 98, 101, 114, 62, 13, 10, 32, 32, 32, 32, 60, 65, 109, 111, 117, 110, 116, 62, 48, 48, 48, 48, 48, 48, 50, 53, 48, 48, 60, 47, 65, 109, 111, 117, 110, 116, 62, 13, 10, 32, 32, 32, 32, 60, 82, 101, 115, 117, 108, 116, 62, 48, 49, 60, 47, 82, 101, 115, 117, 108, 116, 62, 13, 10, 32, 32, 60, 47, 66, 111, 100, 121, 62, 13, 10, 60, 47, 77, 101, 115, 115, 97, 103, 101, 62 };
			
			ReceiveResponse(response1);
		}

		public static APIService getApiService()
		{
			return apiService;
		}
	}
}
